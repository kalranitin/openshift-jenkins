<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Deploy the application on OpenShift</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>5</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.plugins.disk__usage.DiskUsageProperty plugin="disk-usage@0.28"/>
    <com.synopsys.arc.jenkins.plugins.ownership.jobs.JobOwnerJobProperty plugin="ownership@0.8"/>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.16.1">
      <optOut>true</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <se.diabol.jenkins.pipeline.PipelineProperty plugin="delivery-pipeline-plugin@0.9.8">
      <taskName>Application Deploy</taskName>
      <stageName>Deploy</stageName>
    </se.diabol.jenkins.pipeline.PipelineProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>SRC_IMAGE_REPO</name>
          <description>Source Image Repository path which would be as REGISTRY_HOST:REGISTRY_PORT/REPOSITORY_PATH</description>
          <defaultValue>capoc-docker-saas-devops.bintray.io/saas-devops/ose-example</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SRC_IMAGE_NAME</name>
          <description>Source Image Name</description>
          <defaultValue>sample-app</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SRC_IMAGE_TAG</name>
          <description>Source Image Tag</description>
          <defaultValue>latest</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OSE_PROJECT_NAME</name>
          <description>Project/Namespace Name where the image would be pushed</description>
          <defaultValue>sampleapp</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OSE_IMAGE_NAME</name>
          <description>Name of the Image for which Deployment is to be done within OSE</description>
          <defaultValue>sample-app</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OSE_IMAGE_TAG</name>
          <description>Name which is to be used for docker tag before push</description>
          <defaultValue>latest</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OSE_DEP_CONFIG_NAME</name>
          <description>Deployment Config Name been set in OSE</description>
          <defaultValue>sample-app-deployment</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.8.4">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>jenkins-slave-oc-docker</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>docker login -u $BINTRAY_PULL_USER -e kalni03@ca.com -p $BINTRAY_PULL_CREDS capoc-docker-saas-devops.bintray.io

docker pull $SRC_IMAGE_REPO/$SRC_IMAGE_NAME:$SRC_IMAGE_TAG

oc login https://openshift.default.svc.cluster.local --insecure-skip-tls-verify=true -u $OSE_LOGIN_USER -p $OSE_LOGIN_PASS
docker login -u $OSE_LOGIN_USER -e kalni03@ca.com -p `oc whoami -t` `oc get svc docker-registry -n default -o jsonpath=&apos;{.spec.portalIP}&apos;`:5000

docker tag $SRC_IMAGE_REPO/$SRC_IMAGE_NAME:$SRC_IMAGE_TAG `oc get svc docker-registry -n default -o jsonpath=&apos;{.spec.portalIP}&apos;`:5000/$OSE_PROJECT_NAME/$OSE_IMAGE_NAME:$OSE_IMAGE_TAG

docker push `oc get svc docker-registry -n default -o jsonpath=&apos;{.spec.portalIP}&apos;`:5000/$OSE_PROJECT_NAME/$OSE_IMAGE_NAME:$OSE_IMAGE_TAG
docker rmi `oc get svc docker-registry -n default -o jsonpath=&apos;{.spec.portalIP}&apos;`:5000/$OSE_PROJECT_NAME/$OSE_IMAGE_NAME:$OSE_IMAGE_TAG
docker rmi $SRC_IMAGE_REPO/$SRC_IMAGE_NAME:$SRC_IMAGE_TAG</command>
    </hudson.tasks.Shell>
    <com.openshift.jenkins.plugins.pipeline.OpenShiftDeploymentVerifier plugin="openshift-pipeline@1.0.17">
      <apiURL>https://openshift.default.svc.cluster.local</apiURL>
      <namespace>$OSE_PROJECT_NAME</namespace>
      <authToken></authToken>
      <verbose>false</verbose>
      <depCfg>$OSE_DEP_CONFIG_NAME</depCfg>
      <replicaCount></replicaCount>
      <verifyReplicaCount>false</verifyReplicaCount>
    </com.openshift.jenkins.plugins.pipeline.OpenShiftDeploymentVerifier>
  </builders>
  <publishers/>
  <buildWrappers>
    <com.michelin.cio.hudson.plugins.maskpasswords.MaskPasswordsBuildWrapper/>
  </buildWrappers>
</project>